type Query {
  users: [User!]!
  user(id: ID!): User
  hello: String
  getBlogs: [Blog!]!
  getBlog(id: ID!): Blog
}

type Mutation {
  createUser(input: UserInput!): User!
  updateUser(id: ID!, input: UserInput!): User
  deleteUser(id: ID!): Boolean
  createBlog(input: BlogInput!): Blog!
  updateBlog(id: ID!, input: BlogInput!): Blog
  deleteBlog(id: ID!): Boolean
}

input BlogInput {
  title: String!
  content: String!
  excerpt: String
  featuredImage: String
  tags: [String!]
  category: String!
  status: BlogStatus
}

enum UserRole {
  ADMIN
  USER
}



type User {
  id: ID!
  email: String!
  username: String!
  firstName: String!
  lastName: String!
  role: UserRole!
  isActive: Boolean!
  createdAt: String!
  updatedAt: String!
  blogs: [Blog!]!
  quizzes: [Quiz!]!
  quizAttempts: [QuizAttempt!]!
}

input UserInput {
  email: String!
  username: String!
  firstName: String!
  lastName: String!
  password: String!
  role: UserRole
}

enum BlogStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

type Blog {
  id: ID!
  title: String!
  slug: String!
  content: String!
  excerpt: String
  featuredImage: String
  tags: [String!]
  category: String!
  status: BlogStatus!
  viewCount: Int!
  likeCount: Int!
  publishedAt: String
  createdAt: String!
  updatedAt: String!
  author: User!
}

enum QuizDifficulty {
  EASY
  MEDIUM
  HARD
}

enum QuizStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

type Quiz {
  id: ID!
  title: String!
  slug: String!
  description: String
  category: String!
  difficulty: QuizDifficulty!
  status: QuizStatus!
  timeLimit: Int
  totalAttempts: Int!
  totalQuestions: Int!
  featuredImage: String
  tags: [String!]
  createdAt: String!
  updatedAt: String!
  author: User!
  questions: [Question!]!
  attempts: [QuizAttempt!]!
}

type Question {
  id: ID!
  questionText: String!
  explanation: String
  orderIndex: Int!
  points: Int!
  imageUrl: String
  createdAt: String!
  updatedAt: String!
  quiz: Quiz!
  answers: [Answer!]!
}

type Answer {
  id: ID!
  answerText: String!
  isCorrect: Boolean!
  orderIndex: Int!
  explanation: String
  createdAt: String!
  updatedAt: String!
  question: Question!
}

scalar JSONObject

type QuizAttempt {
  id: ID!
  score: Int!
  totalQuestions: Int!
  correctAnswers: Int!
  percentage: Float!
  timeSpent: Int
  userAnswers: JSONObject!
  isCompleted: Boolean!
  startedAt: String!
  completedAt: String
  updatedAt: String!
  user: User!
  quiz: Quiz!
}
  